{"version":3,"file":"static/js/266.dd0a43c7.chunk.js","mappings":"wMAEaA,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,8BACGF,EAAOG,KAAI,YAA2C,IAAxCC,EAAuC,EAAvCA,GAAIC,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,SACrC,OACE,eAAIC,UAAU,iCAAd,UACE,UAAC,KAAD,CAAMC,MAAOR,EAAUS,GAAE,kBAAaN,GAAtC,UACGE,IACC,gBACEE,UAAU,YACVG,QAAQ,OACRC,IAAG,6CAAwCN,GAC3CO,MAAM,MACNC,IAAKT,KAGT,gBAAKG,UAAU,kIAAf,UACE,cAAGA,UAAU,+EAAb,SACGD,UAb2CH,EAmBvD,KAGN,EC5BYW,EAAa,SAAC,GAAgB,IAAdf,EAAa,EAAbA,OAC3B,OACE,gBAAKQ,UAAU,iBAAf,SACGR,EAAOgB,OAAS,IACf,eAAIR,UAAU,sCAAd,UACE,SAACT,EAAD,CAAYC,OAAQA,OAK7B,C,6FCUD,UAnBa,WACX,OAA4CiB,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KAQA,OANAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MAAoBC,MAAK,SAAAtB,GACvBmB,GAAkB,OAAInB,GACvB,GACF,GAAE,KAGD,iCACE,eAAIQ,UAAU,0DAAd,6BAGA,SAAC,IAAD,CAAYR,OAAQkB,MAGzB,C,sKCnBKK,EAAQ,gCACRC,EAAO,2CAEN,SAASH,IACd,IACE,OAAOI,EAAAA,EAAAA,IAAA,UAAaF,EAAb,8BAA2CC,IAAWF,MAAK,SAAAI,GAChE,OAAOA,EAAIC,KAAKC,OACjB,GAGF,CAFC,MAAOC,GACPC,QAAQC,IAAIF,EACb,CACF,CAEM,SAASG,EAAoB5B,GAClC,IACE,OAAOqB,EAAAA,EAAAA,IAAA,UAAaF,EAAb,iBAA8BnB,EAA9B,YAAoCoB,IAAWF,MAAK,SAAAI,GACzD,OAAOA,EAAIC,IACZ,GAGF,CAFC,MAAOE,GACPC,QAAQC,IAAIF,EACb,CACF,CAEM,SAASI,EAAiB7B,GAC/B,IACE,OAAOqB,EAAAA,EAAAA,IAAA,UAAaF,EAAb,iBAA8BnB,EAA9B,oBAA4CoB,IAAWF,MAAK,SAAAI,GACjE,OAAOA,EAAIC,KAAKO,IACjB,GAGF,CAFC,MAAOL,GACPC,QAAQC,IAAIF,EACb,CACF,CAEM,SAASM,EAAoB/B,GAClC,IACE,OAAOqB,EAAAA,EAAAA,IAAA,UAAaF,EAAb,iBAA8BnB,EAA9B,oBAA4CoB,IAAWF,MAAK,SAAAI,GACjE,OAAOA,EAAIC,KAAKC,OACjB,GAGF,CAFC,MAAOC,GACPC,QAAQC,IAAIF,EACb,CACF,CAEM,SAASO,EAAmBC,EAAGC,GACpC,IACE,OAAOb,EAAAA,EAAAA,IAAA,UACGF,EADH,8BACiCc,EADjC,iBAC2CC,EAD3C,YACmDd,IACvDF,MAAK,SAAAI,GACJ,OAAIA,EAAIC,KAAKC,QAAQZ,OAAS,EACrBU,EAAIC,KAENY,MAAM,aACd,GAGJ,CAFC,MAAOV,GACPC,QAAQC,IAAIF,EACb,CACF,C","sources":["components/MoviesItem.js","components/MoviesList.js","pages/Home.js","services/MovieDatabaseApi.js"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\n\nexport const MoviesItem = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <>\n      {movies.map(({ id, title, poster_path, overview }) => {\n        return (\n          <li className=\"group relative overflow-hidden\" key={id}>\n            <Link state={location} to={`/movies/${id}`}>\n              {poster_path && (\n                <img\n                  className=\"h-[450px]\"\n                  loading=\"lazy\"\n                  src={`https://image.tmdb.org/t/p/original${poster_path}`}\n                  width=\"300\"\n                  alt={title}\n                />\n              )}\n              <div className=\"bg-dark-accent-color h-[100%] px-2 opacity-0 group-hover:opacity-100 group-hover:duration-500 absolute top-0 left-0 text-center\">\n                <p className=\"text-[white] group-hover:translate-y-[15vh] group-hover:duration-700 text-sm\">\n                  {overview}\n                </p>\n              </div>\n            </Link>\n          </li>\n        );\n      })}\n    </>\n  );\n};\n","import PropTypes from 'prop-types';\nimport { MoviesItem } from './MoviesItem';\n\nexport const MoviesList = ({ movies }) => {\n  return (\n    <div className=\"container py-8\">\n      {movies.length > 0 && (\n        <ul className=\"flex flex-wrap justify-center gap-2\">\n          <MoviesItem movies={movies} />\n        </ul>\n      )}\n    </div>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      overview: PropTypes.string,\n      title: PropTypes.string,\n      poster_path: PropTypes.string,\n    })\n  ),\n};\n","import { useEffect, useState } from 'react';\nimport { getTrendingMovies } from '../services/MovieDatabaseApi';\nimport { MoviesList } from '../components/MoviesList';\n\nconst Home = () => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n\n  useEffect(() => {\n    getTrendingMovies().then(movies => {\n      setTrendingMovies([...movies]);\n    });\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"text-center text-xl md:text-2xl pt-[2rem] font-semibold\">\n        Trending Today\n      </h1>\n      <MoviesList movies={trendingMovies} />\n    </>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst BASE_URL = `https://api.themoviedb.org/3/`;\nconst API_KEY = `api_key=b87c06507a636c850d5a0bd93afe2f26`;\n\nexport function getTrendingMovies() {\n  try {\n    return axios.get(`${BASE_URL}trending/movie/day?${API_KEY}`).then(res => {\n      return res.data.results;\n    });\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport function getMovieDetailsById(id) {\n  try {\n    return axios.get(`${BASE_URL}movie/${id}?${API_KEY}`).then(res => {\n      return res.data;\n    });\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport function getMovieCastById(id) {\n  try {\n    return axios.get(`${BASE_URL}movie/${id}/credits?${API_KEY}`).then(res => {\n      return res.data.cast;\n    });\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport function getMovieReviewsById(id) {\n  try {\n    return axios.get(`${BASE_URL}movie/${id}/reviews?${API_KEY}`).then(res => {\n      return res.data.results;\n    });\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport function searchMoviesByName(q, page) {\n  try {\n    return axios\n      .get(`${BASE_URL}search/movie?query=${q}&page=${page}&${API_KEY}`)\n      .then(res => {\n        if (res.data.results.length > 0) {\n          return res.data;\n        }\n        return alert('No results');\n      });\n  } catch (error) {\n    console.log(error);\n  }\n}\n"],"names":["MoviesItem","movies","location","useLocation","map","id","title","poster_path","overview","className","state","to","loading","src","width","alt","MoviesList","length","useState","trendingMovies","setTrendingMovies","useEffect","getTrendingMovies","then","BASE_URL","API_KEY","axios","res","data","results","error","console","log","getMovieDetailsById","getMovieCastById","cast","getMovieReviewsById","searchMoviesByName","q","page","alert"],"sourceRoot":""}