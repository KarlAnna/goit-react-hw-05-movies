{"version":3,"file":"static/js/744.96b94066.chunk.js","mappings":"4OAmCA,EA9BgB,WAEZ,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAUA,OARAC,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAoBN,GACfO,MAAK,SAAAJ,GACFC,GAAW,OAAID,GACtB,GACJ,GAAE,CAACH,KAIA,gBAAKQ,UAAU,qBAAf,SACKL,EAAQM,OAAS,GACd,eAAID,UAAU,gBAAd,SACKL,EAAQO,KAAI,gBAAEC,EAAF,EAAEA,GAAIC,EAAN,EAAMA,OAAQC,EAAd,EAAcA,QAAd,OACT,gBAAIL,UAAU,gBAAd,WACI,eAAIA,UAAU,kBAAd,SAAiCI,KACjC,uBAAIC,MAF2BF,EAD1B,OAOf,qEAIjB,C,mKC/BKG,EAAQ,gCACRC,EAAO,2CAEN,SAASC,IACZ,IACI,OAAOC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,8BAA2CC,IAC7CR,MAAK,SAAAW,GACF,OAAOA,EAAIC,IACd,GAGR,CAFC,MAAOC,GACLC,QAAQC,IAAIF,EACf,CACJ,CAEM,SAASG,EAAoBZ,GAChC,IACI,OAAOM,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAA8BH,EAA9B,YAAoCI,IACtCR,MAAK,SAAAW,GACF,OAAOA,EAAIC,IAClB,GAGJ,CAFC,MAAOC,GACLC,QAAQC,IAAIF,EACf,CACJ,CAEM,SAASI,EAAiBb,GAC7B,IACI,OAAOM,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAA8BH,EAA9B,oBAA4CI,IAC9CR,MAAK,SAAAW,GACF,OAAOA,EAAIC,KAAKM,IACvB,GAGJ,CAFC,MAAOL,GACLC,QAAQC,IAAIF,EACf,CACJ,CAEM,SAASd,EAAoBK,GAChC,IACI,OAAOM,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAA8BH,EAA9B,oBAA4CI,IAC9CR,MAAK,SAAAW,GACF,OAAOA,EAAIC,KAAKO,OACvB,GAGJ,CAFC,MAAON,GACLC,QAAQC,IAAIF,EACf,CACJ,CAEM,SAASO,EAAmBC,GAC/B,IACI,OAAOX,EAAAA,EAAAA,IAAA,UAAaH,EAAb,8BAA2Cc,EAA3C,mBAAuDb,IACzDR,MAAK,SAAAW,GACF,OAAIA,EAAIC,KAAKO,QAAQjB,OAAS,EACnBS,EAAIC,KAAKO,QAEbG,MAAM,aACpB,GAGJ,CAFC,MAAOT,GACLC,QAAQC,IAAIF,EACf,CACJ,C","sources":["components/Reviews/Reviews.js","services/MovieDatabaseApi.js"],"sourcesContent":["import { useState, useEffect } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { getMovieReviewsById } from '../../services/MovieDatabaseApi'\nimport './Reviews.css'\n\nconst Reviews = () => {\n\n    const { movieId } = useParams()\n    const [reviews, setReviews] = useState([])\n\n    useEffect(() => {\n        getMovieReviewsById(movieId)\n            .then(reviews => {\n                setReviews([...reviews])\n        })\n    }, [movieId])\n    \n\n    return (\n        <div className='reviews__container'>\n            {reviews.length > 0 ?\n                <ul className='reviews__list'>\n                    {reviews.map(({id, author, content}) => (\n                        <li className='reviews__item' key={id}>\n                            <h3 className='reviews__author'>{author}</h3>\n                            <p>{content}</p>\n                        </li>\n                    ))}\n                </ul>\n                : <p>We don't have any reviews for this movie</p>\n            }\n        </div>\n    )\n}\n\nexport default Reviews","import axios from 'axios';\n\nconst BASE_URL = `https://api.themoviedb.org/3/`\nconst API_KEY = `api_key=b87c06507a636c850d5a0bd93afe2f26`\n\nexport function getTrendingMovies() {\n    try {\n        return axios.get(`${BASE_URL}trending/movie/day?${API_KEY}`)\n            .then(res => {\n                return res.data\n            })\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport function getMovieDetailsById(id) {\n    try {\n        return axios.get(`${BASE_URL}movie/${id}?${API_KEY}`)\n            .then(res => {\n                return res.data\n        })\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport function getMovieCastById(id) {\n    try {\n        return axios.get(`${BASE_URL}movie/${id}/credits?${API_KEY}`)\n            .then(res => {\n                return res.data.cast\n        })\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport function getMovieReviewsById(id) {\n    try {\n        return axios.get(`${BASE_URL}movie/${id}/reviews?${API_KEY}`)\n            .then(res => {\n                return res.data.results\n        })\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport function searchMoviesByName(q) {\n    try {\n        return axios.get(`${BASE_URL}search/movie?query=${q}&page=1&${API_KEY}`)\n            .then(res => {\n                if (res.data.results.length > 0) {\n                    return res.data.results\n                }\n                return alert('No results')\n        })\n    } catch (error) {\n        console.log(error);\n    }\n}"],"names":["movieId","useParams","useState","reviews","setReviews","useEffect","getMovieReviewsById","then","className","length","map","id","author","content","BASE_URL","API_KEY","getTrendingMovies","axios","res","data","error","console","log","getMovieDetailsById","getMovieCastById","cast","results","searchMoviesByName","q","alert"],"sourceRoot":""}