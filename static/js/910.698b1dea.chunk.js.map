{"version":3,"file":"static/js/910.698b1dea.chunk.js","mappings":"sMAqCA,UAjCa,WAET,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KASA,OAPAC,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAiBN,GACZO,MAAK,SAAAJ,GACFC,GAAQ,OAAID,GACnB,GACJ,GAAE,CAACH,KAGA,yBACKG,EAAKK,OAAS,GACX,eAAIC,UAAU,0DAAd,SACKN,EAAKO,KAAI,gBAAEC,EAAF,EAAEA,GAAIC,EAAN,EAAMA,KAAMC,EAAZ,EAAYA,UAAWC,EAAvB,EAAuBA,aAAvB,OACN,gBAAIL,UAAU,mCAAd,UACKK,GACG,gBAAKC,QAAQ,OAAOC,IAAG,8CAAyCF,GAAgBG,MAAM,MAAMC,IAAKN,KAC/F,gBAAKG,QAAQ,OAAOC,IAAG,4CAAuCJ,GAAQK,MAAM,MAAMC,IAAKN,KAE7F,cAAGH,UAAU,UAAb,SAAwBI,KACxB,cAAGJ,UAAU,UAAb,SAAwBG,MAN0BD,EADhD,OAWX,mFAIlB,C,mKCjCKQ,EAAQ,gCACRC,EAAO,2CAEN,SAASC,IACZ,IACI,OAAOC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,8BAA2CC,IAC7Cb,MAAK,SAAAgB,GACF,OAAOA,EAAIC,KAAKC,OACnB,GAGR,CAFC,MAAOC,GACLC,QAAQC,IAAIF,EACf,CACJ,CAEM,SAASG,EAAoBlB,GAChC,IACI,OAAOW,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAA8BR,EAA9B,YAAoCS,IACtCb,MAAK,SAAAgB,GACF,OAAOA,EAAIC,IAClB,GAGJ,CAFC,MAAOE,GACLC,QAAQC,IAAIF,EACf,CACJ,CAEM,SAASpB,EAAiBK,GAC7B,IACI,OAAOW,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAA8BR,EAA9B,oBAA4CS,IAC9Cb,MAAK,SAAAgB,GACF,OAAOA,EAAIC,KAAKrB,IACvB,GAGJ,CAFC,MAAOuB,GACLC,QAAQC,IAAIF,EACf,CACJ,CAEM,SAASI,EAAoBnB,GAChC,IACI,OAAOW,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAA8BR,EAA9B,oBAA4CS,IAC9Cb,MAAK,SAAAgB,GACF,OAAOA,EAAIC,KAAKC,OACvB,GAGJ,CAFC,MAAOC,GACLC,QAAQC,IAAIF,EACf,CACJ,CAEM,SAASK,EAAmBC,EAAGC,GAClC,IACI,OAAOX,EAAAA,EAAAA,IAAA,UAAaH,EAAb,8BAA2Ca,EAA3C,iBAAqDC,EAArD,YAA6Db,IAC/Db,MAAK,SAAAgB,GACF,OAAIA,EAAIC,KAAKC,QAAQjB,OAAS,EACnBe,EAAIC,KAAKC,QAEbS,MAAM,aACpB,GAGJ,CAFC,MAAOR,GACLC,QAAQC,IAAIF,EACf,CACJ,C","sources":["components/Cast.js","services/MovieDatabaseApi.js"],"sourcesContent":["import { useState, useEffect } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { getMovieCastById } from '../services/MovieDatabaseApi'\n\nconst Cast = () => {\n\n    const { movieId } = useParams()\n    const [cast, setCast] = useState([])\n\n    useEffect(() => {\n        getMovieCastById(movieId)\n            .then(cast => {\n                setCast([...cast])\n        })\n    }, [movieId])\n    \n    return (\n        <div>\n            {cast.length > 0 ?\n                <ul className=\"py-8 flex gap-4 flex-wrap justify-center align-baseline\">\n                    {cast.map(({id, name, character, profile_path}) => (\n                        <li className=\"max-w-[100px] w-full text-center\" key={id}>\n                            {profile_path ?\n                                <img loading='lazy' src={`https://image.tmdb.org/t/p/original/${profile_path}`} width='100' alt={name} />\n                                : <img loading='lazy' src={`https://placehold.co/100x150?text=${name}`} width='100' alt={name} />\n                            }\n                            <p className=\"text-lg\">{character}</p>\n                            <p className=\"text-sm\">{name}</p>\n                        </li>\n                    ))}\n                </ul>\n                 : <p>We don't have any information about cast for this film</p>\n            }\n        </div>\n    )\n}\n\nexport default Cast","import axios from 'axios';\n\nconst BASE_URL = `https://api.themoviedb.org/3/`\nconst API_KEY = `api_key=b87c06507a636c850d5a0bd93afe2f26`\n\nexport function getTrendingMovies() {\n    try {\n        return axios.get(`${BASE_URL}trending/movie/day?${API_KEY}`)\n            .then(res => {\n                return res.data.results\n            })\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport function getMovieDetailsById(id) {\n    try {\n        return axios.get(`${BASE_URL}movie/${id}?${API_KEY}`)\n            .then(res => {\n                return res.data\n        })\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport function getMovieCastById(id) {\n    try {\n        return axios.get(`${BASE_URL}movie/${id}/credits?${API_KEY}`)\n            .then(res => {\n                return res.data.cast\n        })\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport function getMovieReviewsById(id) {\n    try {\n        return axios.get(`${BASE_URL}movie/${id}/reviews?${API_KEY}`)\n            .then(res => {\n                return res.data.results\n        })\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport function searchMoviesByName(q, page) {\n    try {\n        return axios.get(`${BASE_URL}search/movie?query=${q}&page=${page}&${API_KEY}`)\n            .then(res => {\n                if (res.data.results.length > 0) {\n                    return res.data.results\n                }\n                return alert('No results')\n        })\n    } catch (error) {\n        console.log(error);\n    }\n}"],"names":["movieId","useParams","useState","cast","setCast","useEffect","getMovieCastById","then","length","className","map","id","name","character","profile_path","loading","src","width","alt","BASE_URL","API_KEY","getTrendingMovies","axios","res","data","results","error","console","log","getMovieDetailsById","getMovieReviewsById","searchMoviesByName","q","page","alert"],"sourceRoot":""}