{"version":3,"file":"static/js/287.498b6c73.chunk.js","mappings":"4OAqCA,EAhCa,WAET,IAAMA,GAAWC,EAAAA,EAAAA,MAEjB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KASA,OAPAC,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAiBN,EAASO,OACrBC,MAAK,SAAAL,GACFC,GAAQ,OAAID,GACnB,GACJ,GAAE,CAACH,EAASO,SAGT,0BACI,SAAC,EAAAE,SAAD,CAAUC,SAAU,KAApB,SACCP,EAAKQ,OAAS,IACX,eAAIC,UAAU,aAAd,SACKT,EAAKU,KAAI,gBAAEC,EAAF,EAAEA,GAAIC,EAAN,EAAMA,KAAMC,EAAZ,EAAYA,UAAWC,EAAvB,EAAuBA,aAAvB,OACN,gBAAIL,UAAU,aAAd,UACKK,IAAgB,gBAAKC,QAAQ,OAAOC,IAAG,8CAAyCF,GAAgBG,MAAM,MAAMC,IAAKN,KAClH,cAAGH,UAAU,kBAAb,SAAgCI,KAChC,cAAGJ,UAAU,aAAb,SAA2BG,MAHCD,EAD1B,SAY7B,C,mKCjCKQ,EAAQ,gCACRC,EAAO,2CAEN,SAASC,IACZ,IACI,OAAOC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,8BAA2CC,IAC7Cf,MAAK,SAAAkB,GACF,OAAOA,EAAIC,IACd,GAGR,CAFC,MAAOC,GACLC,QAAQC,IAAIF,EACf,CACJ,CAEM,SAASG,EAAoBjB,GAChC,IACI,OAAOW,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAA8BR,EAA9B,YAAoCS,IACtCf,MAAK,SAAAkB,GACF,OAAOA,EAAIC,IAClB,GAGJ,CAFC,MAAOC,GACLC,QAAQC,IAAIF,EACf,CACJ,CAEM,SAAStB,EAAiBQ,GAC7B,IACI,OAAOW,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAA8BR,EAA9B,oBAA4CS,IAC9Cf,MAAK,SAAAkB,GACF,OAAOA,EAAIC,KAAKxB,IACvB,GAGJ,CAFC,MAAOyB,GACLC,QAAQC,IAAIF,EACf,CACJ,CAEM,SAASI,EAAoBlB,GAChC,IACI,OAAOW,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAA8BR,EAA9B,oBAA4CS,IAC9Cf,MAAK,SAAAkB,GACF,OAAOA,EAAIC,KAAKM,OACvB,GAGJ,CAFC,MAAOL,GACLC,QAAQC,IAAIF,EACf,CACJ,CAEM,SAASM,EAAmBC,GAC/B,IACI,OAAOV,EAAAA,EAAAA,IAAA,UAAaH,EAAb,8BAA2Ca,EAA3C,mBAAuDZ,IACzDf,MAAK,SAAAkB,GACF,OAAIA,EAAIC,KAAKM,QAAQtB,OAAS,EACnBe,EAAIC,KAAKM,QAEbG,MAAM,aACpB,GAGJ,CAFC,MAAOR,GACLC,QAAQC,IAAIF,EACf,CACJ,C","sources":["components/Cast/Cast.js","services/MovieDatabaseApi.js"],"sourcesContent":["import { useState, useEffect, Suspense } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport { getMovieCastById } from '../../services/MovieDatabaseApi'\nimport './Cast.css'\n\nconst Cast = () => {\n\n    const location = useLocation()\n\n    const [cast, setCast] = useState([])\n\n    useEffect(() => {\n        getMovieCastById(location.state)\n            .then(cast => {\n                setCast([...cast])\n        })\n    }, [location.state])\n    \n    return (\n        <div>\n            <Suspense fallback={null}>\n            {cast.length > 0 &&\n                <ul className='cast__list'>\n                    {cast.map(({id, name, character, profile_path}) => (\n                        <li className='cast__item' key={id}>\n                            {profile_path && <img loading='lazy' src={`https://image.tmdb.org/t/p/original/${profile_path}`} width='100' alt={name} />}\n                            <p className='cast__character'>{character}</p>\n                            <p className='cast__name'>{name}</p>\n                        </li>\n                    ))}\n                </ul>\n            }\n            </Suspense>\n        </div>\n    )\n}\n\nexport default Cast","import axios from 'axios';\n\nconst BASE_URL = `https://api.themoviedb.org/3/`\nconst API_KEY = `api_key=b87c06507a636c850d5a0bd93afe2f26`\n\nexport function getTrendingMovies() {\n    try {\n        return axios.get(`${BASE_URL}trending/movie/day?${API_KEY}`)\n            .then(res => {\n                return res.data\n            })\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport function getMovieDetailsById(id) {\n    try {\n        return axios.get(`${BASE_URL}movie/${id}?${API_KEY}`)\n            .then(res => {\n                return res.data\n        })\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport function getMovieCastById(id) {\n    try {\n        return axios.get(`${BASE_URL}movie/${id}/credits?${API_KEY}`)\n            .then(res => {\n                return res.data.cast\n        })\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport function getMovieReviewsById(id) {\n    try {\n        return axios.get(`${BASE_URL}movie/${id}/reviews?${API_KEY}`)\n            .then(res => {\n                return res.data.results\n        })\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport function searchMoviesByName(q) {\n    try {\n        return axios.get(`${BASE_URL}search/movie?query=${q}&page=1&${API_KEY}`)\n            .then(res => {\n                if (res.data.results.length > 0) {\n                    return res.data.results\n                }\n                return alert('No results')\n        })\n    } catch (error) {\n        console.log(error);\n    }\n}"],"names":["location","useLocation","useState","cast","setCast","useEffect","getMovieCastById","state","then","Suspense","fallback","length","className","map","id","name","character","profile_path","loading","src","width","alt","BASE_URL","API_KEY","getTrendingMovies","axios","res","data","error","console","log","getMovieDetailsById","getMovieReviewsById","results","searchMoviesByName","q","alert"],"sourceRoot":""}