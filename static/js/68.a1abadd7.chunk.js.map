{"version":3,"file":"static/js/68.a1abadd7.chunk.js","mappings":"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","sources":["components/MoviesItem.js","components/MoviesList.js","components/Searcher.js","pages/Movies.js","services/MovieDatabaseApi.js"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\n\nexport const MoviesItem = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <>\n      {movies.map(({ id, title, poster_path, overview }) => {\n        return (\n          <li className=\"group relative overflow-hidden\" key={id}>\n            <Link state={location} to={`/movies/${id}`}>\n              {poster_path && (\n                <img\n                  className=\"h-[450px]\"\n                  loading=\"lazy\"\n                  src={`https://image.tmdb.org/t/p/original${poster_path}`}\n                  width=\"300\"\n                  alt={title}\n                />\n              )}\n              <div className=\"bg-dark-accent-color h-[100%] px-2 opacity-0 group-hover:opacity-100 group-hover:duration-500 absolute top-0 left-0 text-center\">\n                <p className=\"text-[white] group-hover:translate-y-[15vh] group-hover:duration-700 text-sm\">\n                  {overview}\n                </p>\n              </div>\n            </Link>\n          </li>\n        );\n      })}\n    </>\n  );\n};\n","import PropTypes from 'prop-types';\nimport { MoviesItem } from './MoviesItem';\n\nexport const MoviesList = ({ movies }) => {\n  return (\n    <div className=\"container py-8\">\n      {movies.length > 0 && (\n        <ul className=\"flex flex-wrap justify-center gap-2\">\n          <MoviesItem movies={movies} />\n        </ul>\n      )}\n    </div>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      overview: PropTypes.string,\n      title: PropTypes.string,\n      poster_path: PropTypes.string,\n    })\n  ),\n};\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { searchMoviesByName } from '../services/MovieDatabaseApi';\nimport { MoviesList } from 'components/MoviesList';\nimport { BiSearchAlt } from 'react-icons/bi';\n\nexport const Searcher = () => {\n  const [searchedMovies, setSearchedMovies] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [currentPage, setCurrentPage] = useState(1);\n  // const [totalPages, setTotalPages] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  // const queryParams = new URLSearchParams(useLocation().search);\n  const query = searchParams.get('query');\n  // const page = searchParams.get('page');\n\n  const onChange = e => {\n    const { value } = e.target;\n    setSearchQuery(value.trim().toLowerCase());\n  };\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n    searchMoviesByName(query, currentPage).then(({ results, total_pages }) => {\n      setSearchedMovies(results);\n      setSearchParams({ query: query, page: currentPage });\n      // setTotalPages(Math.ceil(total_pages / 20));\n    });\n  }, [query, currentPage, setSearchParams]);\n  \n\n  const onSubmit = e => {\n    e.preventDefault();\n    setSearchParams({ query: searchQuery, page: currentPage });\n    setSearchQuery('');\n  };\n\n  const onLoadMore = () => {\n    let next = currentPage + 1\n    setCurrentPage(next);\n  };\n\n  return (\n    <div className=\"container py-8\">\n      <form\n        className=\"relative flex items-center max-w-xl w-4/5 overflow-hidden mx-auto\"\n        onSubmit={onSubmit}\n      >\n        <span className=\"sr-only\">Search</span>\n        <button className=\"absolute px-3 bg-light-accent-color h-10 rounded-md flex justify-center items-center text-primary-text-color\">\n          <BiSearchAlt />\n        </button>\n        <input\n          className=\"placeholder:italic placeholder:text-dark-accent-color border border-dark-accent-color/40 focus:border-light-accent-color focus:outline-none rounded-md py-2 px-12 w-full shadow-sm text-primary-text-color\"\n          placeholder=\"Type something...\"\n          type=\"text\"\n          value={searchQuery}\n          onChange={onChange}\n        />\n      </form>\n      {searchedMovies.length > 0 && (\n        <>\n          <MoviesList movies={searchedMovies} />\n          <button onClick={onLoadMore}>MORE</button>\n        </>\n      )}\n    </div>\n  );\n};\n","import { Searcher } from '../components/Searcher';\n\nconst Movies = () => {\n  return (\n    <>\n      <Searcher />\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst BASE_URL = `https://api.themoviedb.org/3/`;\nconst API_KEY = `api_key=b87c06507a636c850d5a0bd93afe2f26`;\n\nexport function getTrendingMovies() {\n  try {\n    return axios.get(`${BASE_URL}trending/movie/day?${API_KEY}`).then(res => {\n      return res.data.results;\n    });\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport function getMovieDetailsById(id) {\n  try {\n    return axios.get(`${BASE_URL}movie/${id}?${API_KEY}`).then(res => {\n      return res.data;\n    });\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport function getMovieCastById(id) {\n  try {\n    return axios.get(`${BASE_URL}movie/${id}/credits?${API_KEY}`).then(res => {\n      return res.data.cast;\n    });\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport function getMovieReviewsById(id) {\n  try {\n    return axios.get(`${BASE_URL}movie/${id}/reviews?${API_KEY}`).then(res => {\n      return res.data.results;\n    });\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport function searchMoviesByName(q, page) {\n  try {\n    return axios\n      .get(`${BASE_URL}search/movie?query=${q}&page=${page}&${API_KEY}`)\n      .then(res => {\n        if (res.data.results.length > 0) {\n          return res.data;\n        }\n        return alert('No results');\n      });\n  } catch (error) {\n    console.log(error);\n  }\n}\n"],"names":["MoviesItem","movies","location","useLocation","map","id","title","poster_path","overview","className","state","to","loading","src","width","alt","MoviesList","length","Searcher","useState","searchedMovies","setSearchedMovies","searchQuery","setSearchQuery","currentPage","setCurrentPage","useSearchParams","searchParams","setSearchParams","query","get","useEffect","searchMoviesByName","then","results","total_pages","page","onSubmit","e","preventDefault","placeholder","type","value","onChange","target","trim","toLowerCase","onClick","BASE_URL","API_KEY","getTrendingMovies","axios","res","data","error","console","log","getMovieDetailsById","getMovieCastById","cast","getMovieReviewsById","q","alert"],"sourceRoot":""}