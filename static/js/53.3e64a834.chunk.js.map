{"version":3,"file":"static/js/53.3e64a834.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.js","components/SearchBar/SearchBar.js","pages/Movies.js","services/MovieDatabaseApi.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react'\nimport { NavLink, useLocation } from 'react-router-dom'\nimport './MoviesList.css'\n\nexport const MoviesList = ({movies}) => {\n\n    const [moviesList, setMoviesList] = useState([])\n    const location = useLocation()\n\n    useEffect(() => {\n        setMoviesList([...movies])\n    }, [movies])\n\n    return (\n        <>\n            <hr className='movies__line' />\n            <div className='movies__container'>\n                {moviesList.length > 0 &&\n                    <ul className='movies__list'>\n                        {moviesList.map(({id, title, poster_path, overview}) => {\n                            return (\n                                <li className='movies__item' key={id}>\n                                    <NavLink state={{location}} to={`/movies/${id}`}>\n                                        {poster_path &&\n                                            <img \n                                                loading='lazy' \n                                                src={`https://image.tmdb.org/t/p/original${poster_path}`} \n                                                width='400' \n                                                alt={title} />\n                                        }\n                                        <div className='movies__item-overlay'>\n                                            <p className='movies__item-description'>{overview}</p>\n                                        </div>\n                                    </NavLink>\n                                </li>\n                            )\n                        })}\n                    </ul>\n                }\n            </div>\n        </>\n    )\n}\n\nMoviesList.propType = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      overview: PropTypes.string,\n      title: PropTypes.string,\n      poster_path: PropTypes.string,\n    })\n  ),\n};","import { useState, useEffect } from 'react'\nimport { useSearchParams } from 'react-router-dom'\nimport { searchMoviesByName } from '../../services/MovieDatabaseApi'\nimport { MoviesList } from 'components/MoviesList/MoviesList'\nimport './SearchBar.css'\n\nexport const SearchBar = () => {\n\n    const [searchMovies, setSearchMovies] = useState([])\n    const [searchQuery, setSearchQuery] = useState('')\n    const [searchParams, setSearchParams] = useSearchParams();\n    const query = searchParams.get('query')\n\n    const onChange = (e) => {\n        const { value } = e.target\n        setSearchQuery(value.trim().toLowerCase())\n    }\n\n    useEffect(() => {\n        if (!query) {\n          return\n        }\n        searchMoviesByName(query).then(movies => {\n            setSearchMovies(movies)\n        })\n    }, [query, searchParams])\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n        setSearchParams({ query: searchQuery })\n        setSearchQuery('')\n    }\n\n    return (\n        <div className='search-bar__container'>\n            \n            <form className='search-bar__form' onSubmit={onSubmit}>\n                <input type='text' value={searchQuery} className='search-bar__input' onChange={onChange} />\n                <button className='search-bar__btn'>Submit</button>\n            </form>\n            <MoviesList movies={searchMovies} />\n        </div>\n    )\n}\n\n// export default SearchBar","import { Suspense } from \"react\"\nimport { Outlet } from \"react-router-dom\"\nimport { SearchBar } from \"../components/SearchBar/SearchBar\"\n\nconst Movies = () => {\n    return (\n        <>\n            <SearchBar />\n            <Suspense fallback={null}>\n                <Outlet />\n            </Suspense>\n        </>\n    )\n}\n\nexport default Movies","import axios from 'axios';\n\nconst BASE_URL = `https://api.themoviedb.org/3/`\nconst API_KEY = `api_key=b87c06507a636c850d5a0bd93afe2f26`\n\nexport function getTrendingMovies() {\n    try {\n        return axios.get(`${BASE_URL}trending/movie/day?${API_KEY}`)\n            .then(res => {\n                return res.data\n            })\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport function getMovieDetailsById(id) {\n    try {\n        return axios.get(`${BASE_URL}movie/${id}?${API_KEY}`)\n            .then(res => {\n                return res.data\n        })\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport function getMovieCastById(id) {\n    try {\n        return axios.get(`${BASE_URL}movie/${id}/credits?${API_KEY}`)\n            .then(res => {\n                return res.data.cast\n        })\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport function getMovieReviewsById(id) {\n    try {\n        return axios.get(`${BASE_URL}movie/${id}/reviews?${API_KEY}`)\n            .then(res => {\n                return res.data.results\n        })\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport function searchMoviesByName(q) {\n    try {\n        return axios.get(`${BASE_URL}search/movie?query=${q}&page=1&${API_KEY}`)\n            .then(res => {\n                if (res.data.results.length > 0) {\n                    return res.data.results\n                }\n                return alert('No results')\n        })\n    } catch (error) {\n        console.log(error);\n    }\n}","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["MoviesList","movies","useState","moviesList","setMoviesList","location","useLocation","useEffect","className","length","map","id","title","poster_path","overview","state","to","loading","src","width","alt","propType","PropTypes","SearchBar","searchMovies","setSearchMovies","searchQuery","setSearchQuery","useSearchParams","searchParams","setSearchParams","query","get","searchMoviesByName","then","onSubmit","e","preventDefault","type","value","onChange","target","trim","toLowerCase","Suspense","fallback","BASE_URL","API_KEY","getTrendingMovies","axios","res","data","error","console","log","getMovieDetailsById","getMovieCastById","cast","getMovieReviewsById","results","q","alert","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","propFullName","secret","err","Error","name","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"sourceRoot":""}