{"version":3,"file":"static/js/387.2cd8fa80.chunk.js","mappings":"sNAIaA,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAEzB,GAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACMC,GAAWC,EAAAA,EAAAA,MAMjB,OAJAC,EAAAA,EAAAA,YAAU,WACNH,EAAcH,EACjB,GAAE,CAACA,KAGA,gBAAKO,UAAU,iBAAf,SACKL,EAAWM,OAAS,IACjB,eAAID,UAAU,sCAAd,SACKL,EAAWO,KAAI,YAAyC,IAAvCC,EAAsC,EAAtCA,GAAIC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,YAAaC,EAAc,EAAdA,SACtC,OACI,eAAIN,UAAU,iCAAd,UACI,UAAC,KAAD,CAAMO,MAAOV,EAAUW,GAAE,kBAAaL,GAAtC,UACKE,IACG,gBACAI,QAAQ,OACRC,IAAG,6CAAwCL,GAC3CM,MAAM,MACNC,IAAKR,KAET,gBAAKJ,UAAU,oIAAf,UACI,cAAGA,UAAU,mEAAb,SAAiFM,UAVzCH,EAe3D,OAKpB,C,6ICjCYU,EAAY,WAErB,OAAwCnB,EAAAA,EAAAA,UAAS,IAAjD,eAAOoB,EAAP,KAAqBC,EAArB,KACA,GAAsCrB,EAAAA,EAAAA,UAAS,IAA/C,eAAOsB,EAAP,KAAoBC,EAApB,KACA,GAAwBvB,EAAAA,EAAAA,UAAS,GAAjC,eAAOwB,EAAP,KAAaC,EAAb,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAQF,EAAaG,IAAI,UAO/BzB,EAAAA,EAAAA,YAAU,WACDwB,IAGLE,EAAAA,EAAAA,IAAmBF,EAAOL,GAAMQ,MAAK,SAAAjC,GACjCsB,GAAgB,SAAAY,GAAI,wBAAQA,IAAR,OAAiBlC,GAAjB,GACvB,GACJ,GAAE,CAAC8B,EAAOL,IAcX,OACI,iBAAKlB,UAAU,iBAAf,WACI,kBAAMA,UAAU,oEAAoE4B,SAd3E,SAACC,GACdA,EAAEC,iBACFR,EAAgB,CAAEC,MAAOP,IACzBC,EAAe,IACfF,EAAgB,IAChBI,EAAQ,EACX,EAQO,WACI,iBAAMnB,UAAU,UAAhB,qBACA,mBAAQA,UAAU,0GAAlB,UAA4H,SAAC,MAAD,OAC5H,kBAAOA,UAAU,6MAEb+B,YAAY,oBAAoBC,KAAK,OAAOC,MAAOjB,EAAakB,SAjC/D,SAACL,GACd,IAAQI,EAAUJ,EAAEM,OAAZF,MACRhB,EAAegB,EAAMG,OAAOC,cAC/B,OAgCQvB,EAAab,OAAS,IACnB,iCACI,SAACT,EAAA,EAAD,CAAYC,OAAQqB,KACpB,mBAAQd,UAAU,uEAAuEsC,QAhBtF,WACfnB,GAAQ,SAAAQ,GAAI,OAAIA,EAAO,CAAX,GACf,EAce,sCAKnB,EC/CD,EARe,WACX,OACI,+BACI,SAACd,EAAD,KAGX,C,mKCNK0B,EAAQ,gCACRC,EAAO,2CAEN,SAASC,IACZ,IACI,OAAOC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,8BAA2CC,IAC7Cd,MAAK,SAAAiB,GACF,OAAOA,EAAIC,KAAKC,OACnB,GAGR,CAFC,MAAOC,GACLC,QAAQC,IAAIF,EACf,CACJ,CAEM,SAASG,EAAoB9C,GAChC,IACI,OAAOuC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAA8BpC,EAA9B,YAAoCqC,IACtCd,MAAK,SAAAiB,GACF,OAAOA,EAAIC,IAClB,GAGJ,CAFC,MAAOE,GACLC,QAAQC,IAAIF,EACf,CACJ,CAEM,SAASI,EAAiB/C,GAC7B,IACI,OAAOuC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAA8BpC,EAA9B,oBAA4CqC,IAC9Cd,MAAK,SAAAiB,GACF,OAAOA,EAAIC,KAAKO,IACvB,GAGJ,CAFC,MAAOL,GACLC,QAAQC,IAAIF,EACf,CACJ,CAEM,SAASM,EAAoBjD,GAChC,IACI,OAAOuC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAA8BpC,EAA9B,oBAA4CqC,IAC9Cd,MAAK,SAAAiB,GACF,OAAOA,EAAIC,KAAKC,OACvB,GAGJ,CAFC,MAAOC,GACLC,QAAQC,IAAIF,EACf,CACJ,CAEM,SAASrB,EAAmB4B,EAAGnC,GAClC,IACI,OAAOwB,EAAAA,EAAAA,IAAA,UAAaH,EAAb,8BAA2Cc,EAA3C,iBAAqDnC,EAArD,YAA6DsB,IAC/Dd,MAAK,SAAAiB,GACF,OAAIA,EAAIC,KAAKC,QAAQ5C,OAAS,EACnB0C,EAAIC,KAAKC,QAEbS,MAAM,aACpB,GAGJ,CAFC,MAAOR,GACLC,QAAQC,IAAIF,EACf,CACJ,C","sources":["components/MoviesList.js","components/SearchBar.js","pages/Movies.js","services/MovieDatabaseApi.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react'\nimport { Link, useLocation } from 'react-router-dom'\n\nexport const MoviesList = ({ movies }) => {\n\n    const [moviesList, setMoviesList] = useState([])\n    const location = useLocation()\n\n    useEffect(() => {\n        setMoviesList(movies)\n    }, [movies])\n\n    return (\n        <div className=\"container py-8\">\n            {moviesList.length > 0 &&\n                <ul className=\"flex flex-wrap justify-center gap-2\">\n                    {moviesList.map(({id, title, poster_path, overview}) => {\n                        return (\n                            <li className=\"group relative overflow-hidden\" key={id}>\n                                <Link state={location} to={`/movies/${id}`}>\n                                    {poster_path &&\n                                        <img \n                                        loading='lazy' \n                                        src={`https://image.tmdb.org/t/p/original${poster_path}`} \n                                        width='400' \n                                        alt={title} />\n                                    }\n                                    <div className=\"bg-dark-royal-blue-0.6 h-[100%] px-1 opacity-0 group-hover:opacity-100 group-hover:duration-500 absolute top-0 left-0 text-center\">\n                                        <p className=\"text-[white] group-hover:translate-y-40 group-hover:duration-700\">{overview}</p>\n                                    </div>\n                                </Link>\n                            </li>\n                        )\n                    })}\n                </ul>\n            }\n        </div>\n    )\n}\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      overview: PropTypes.string,\n      title: PropTypes.string,\n      poster_path: PropTypes.string,\n    })\n  ),\n};","import { useState, useEffect } from 'react'\nimport { useSearchParams } from 'react-router-dom'\nimport { searchMoviesByName } from '../services/MovieDatabaseApi'\nimport { MoviesList } from 'components/MoviesList'\nimport { BiSearchAlt } from 'react-icons/bi'\n\nexport const SearchBar = () => {\n\n    const [searchMovies, setSearchMovies] = useState([])\n    const [searchQuery, setSearchQuery] = useState('')\n    const [page, setPage] = useState(1)\n    const [searchParams, setSearchParams] = useSearchParams();\n    const query = searchParams.get('query')\n\n    const onChange = (e) => {\n        const { value } = e.target\n        setSearchQuery(value.trim().toLowerCase())\n    }\n\n    useEffect(() => {\n        if (!query) {\n          return\n        }\n        searchMoviesByName(query, page).then(movies => {\n            setSearchMovies(prev => [...prev, ...movies])\n        })\n    }, [query, page])\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n        setSearchParams({ query: searchQuery })\n        setSearchQuery('')\n        setSearchMovies([])\n        setPage(1)\n    }\n\n    const onLoadMore = () => {\n        setPage(prev => prev + 1)\n    }\n\n    return (\n        <div className=\"container py-8\">\n            <form className=\"relative flex items-center max-w-xl w-4/5 overflow-hidden mx-auto\" onSubmit={onSubmit}>\n                <span className=\"sr-only\">Search</span>\n                <button className=\"absolute px-3 bg-light-royal-blue-0.6 h-10 rounded-md flex justify-center items-center text-cloud-burst\"><BiSearchAlt /></button>\n                <input className=\"placeholder:italic placeholder:text-dark-royal-blue-0.6 border border-dark-royal-blue-0.6/40 focus:border-light-royal-blue-0.6 focus:outline-none \n                rounded-md py-2 px-12 w-full shadow-sm text-cloud-burst\"\n                    placeholder='Type something...' type='text' value={searchQuery} onChange={onChange} />\n            </form>\n            {searchMovies.length > 0 && \n                <>\n                    <MoviesList movies={searchMovies} />\n                    <button className=\"block mx-auto py-[1.5vh] px-[6vw] rounded bg-royal-blue text-[white]\" onClick={onLoadMore}>Load more movies...</button>\n                </>\n            }\n        </div>\n    )\n}","import { SearchBar } from \"../components/SearchBar\"\n\nconst Movies = () => {\n    return (\n        <>\n            <SearchBar />\n        </>\n    )\n}\n\nexport default Movies","import axios from 'axios';\n\nconst BASE_URL = `https://api.themoviedb.org/3/`\nconst API_KEY = `api_key=b87c06507a636c850d5a0bd93afe2f26`\n\nexport function getTrendingMovies() {\n    try {\n        return axios.get(`${BASE_URL}trending/movie/day?${API_KEY}`)\n            .then(res => {\n                return res.data.results\n            })\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport function getMovieDetailsById(id) {\n    try {\n        return axios.get(`${BASE_URL}movie/${id}?${API_KEY}`)\n            .then(res => {\n                return res.data\n        })\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport function getMovieCastById(id) {\n    try {\n        return axios.get(`${BASE_URL}movie/${id}/credits?${API_KEY}`)\n            .then(res => {\n                return res.data.cast\n        })\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport function getMovieReviewsById(id) {\n    try {\n        return axios.get(`${BASE_URL}movie/${id}/reviews?${API_KEY}`)\n            .then(res => {\n                return res.data.results\n        })\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport function searchMoviesByName(q, page) {\n    try {\n        return axios.get(`${BASE_URL}search/movie?query=${q}&page=${page}&${API_KEY}`)\n            .then(res => {\n                if (res.data.results.length > 0) {\n                    return res.data.results\n                }\n                return alert('No results')\n        })\n    } catch (error) {\n        console.log(error);\n    }\n}"],"names":["MoviesList","movies","useState","moviesList","setMoviesList","location","useLocation","useEffect","className","length","map","id","title","poster_path","overview","state","to","loading","src","width","alt","SearchBar","searchMovies","setSearchMovies","searchQuery","setSearchQuery","page","setPage","useSearchParams","searchParams","setSearchParams","query","get","searchMoviesByName","then","prev","onSubmit","e","preventDefault","placeholder","type","value","onChange","target","trim","toLowerCase","onClick","BASE_URL","API_KEY","getTrendingMovies","axios","res","data","results","error","console","log","getMovieDetailsById","getMovieCastById","cast","getMovieReviewsById","q","alert"],"sourceRoot":""}