{"version":3,"file":"static/js/266.b6ff30e4.chunk.js","mappings":"sNAIaA,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAEzB,GAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACMC,GAAWC,EAAAA,EAAAA,MAMjB,OAJAC,EAAAA,EAAAA,YAAU,WACNH,EAAcH,EACjB,GAAE,CAACA,KAGA,gBAAKO,UAAU,iBAAf,SACKL,EAAWM,OAAS,IACjB,eAAID,UAAU,sCAAd,SACKL,EAAWO,KAAI,YAAyC,IAAvCC,EAAsC,EAAtCA,GAAIC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,YAAaC,EAAc,EAAdA,SACtC,OACI,eAAIN,UAAU,iCAAd,UACI,UAAC,KAAD,CAAMO,MAAOV,EAAUW,GAAE,kBAAaL,GAAtC,UACKE,IACG,gBACAI,QAAQ,OACRC,IAAG,6CAAwCL,GAC3CM,MAAM,MACNC,IAAKR,KAET,gBAAKJ,UAAU,oIAAf,UACI,cAAGA,UAAU,mEAAb,SAAiFM,UAVzCH,EAe3D,OAKpB,C,sFCjBD,UAlBa,WAET,OAA4CT,EAAAA,EAAAA,UAAS,IAArD,eAAOmB,EAAP,KAAuBC,EAAvB,KAQA,OANAf,EAAAA,EAAAA,YAAU,YACNgB,EAAAA,EAAAA,MAAoBC,MAAK,SAAAvB,GACrBqB,GAAkB,OAAIrB,GACzB,GACJ,GAAE,KAGC,iCACI,eAAIO,UAAU,0CAAd,6BACA,SAAC,IAAD,CAAYP,OAAQoB,MAG/B,C,mKClBKI,EAAQ,gCACRC,EAAO,2CAEN,SAASH,IACZ,IACI,OAAOI,EAAAA,EAAAA,IAAA,UAAaF,EAAb,8BAA2CC,IAC7CF,MAAK,SAAAI,GACF,OAAOA,EAAIC,KAAKC,OACnB,GAGR,CAFC,MAAOC,GACLC,QAAQC,IAAIF,EACf,CACJ,CAEM,SAASG,EAAoBvB,GAChC,IACI,OAAOgB,EAAAA,EAAAA,IAAA,UAAaF,EAAb,iBAA8Bd,EAA9B,YAAoCe,IACtCF,MAAK,SAAAI,GACF,OAAOA,EAAIC,IAClB,GAGJ,CAFC,MAAOE,GACLC,QAAQC,IAAIF,EACf,CACJ,CAEM,SAASI,EAAiBxB,GAC7B,IACI,OAAOgB,EAAAA,EAAAA,IAAA,UAAaF,EAAb,iBAA8Bd,EAA9B,oBAA4Ce,IAC9CF,MAAK,SAAAI,GACF,OAAOA,EAAIC,KAAKO,IACvB,GAGJ,CAFC,MAAOL,GACLC,QAAQC,IAAIF,EACf,CACJ,CAEM,SAASM,EAAoB1B,GAChC,IACI,OAAOgB,EAAAA,EAAAA,IAAA,UAAaF,EAAb,iBAA8Bd,EAA9B,oBAA4Ce,IAC9CF,MAAK,SAAAI,GACF,OAAOA,EAAIC,KAAKC,OACvB,GAGJ,CAFC,MAAOC,GACLC,QAAQC,IAAIF,EACf,CACJ,CAEM,SAASO,EAAmBC,EAAGC,GAClC,IACI,OAAOb,EAAAA,EAAAA,IAAA,UAAaF,EAAb,8BAA2Cc,EAA3C,iBAAqDC,EAArD,YAA6Dd,IAC/DF,MAAK,SAAAI,GACF,OAAIA,EAAIC,KAAKC,QAAQrB,OAAS,EACnBmB,EAAIC,KAAKC,QAEbW,MAAM,aACpB,GAGJ,CAFC,MAAOV,GACLC,QAAQC,IAAIF,EACf,CACJ,C","sources":["components/MoviesList.js","pages/Home.js","services/MovieDatabaseApi.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react'\nimport { Link, useLocation } from 'react-router-dom'\n\nexport const MoviesList = ({ movies }) => {\n\n    const [moviesList, setMoviesList] = useState([])\n    const location = useLocation()\n\n    useEffect(() => {\n        setMoviesList(movies)\n    }, [movies])\n\n    return (\n        <div className=\"container py-8\">\n            {moviesList.length > 0 &&\n                <ul className=\"flex flex-wrap justify-center gap-2\">\n                    {moviesList.map(({id, title, poster_path, overview}) => {\n                        return (\n                            <li className=\"group relative overflow-hidden\" key={id}>\n                                <Link state={location} to={`/movies/${id}`}>\n                                    {poster_path &&\n                                        <img \n                                        loading='lazy' \n                                        src={`https://image.tmdb.org/t/p/original${poster_path}`} \n                                        width='400' \n                                        alt={title} />\n                                    }\n                                    <div className=\"bg-dark-royal-blue-0.6 h-[100%] px-1 opacity-0 group-hover:opacity-100 group-hover:duration-500 absolute top-0 left-0 text-center\">\n                                        <p className=\"text-[white] group-hover:translate-y-40 group-hover:duration-700\">{overview}</p>\n                                    </div>\n                                </Link>\n                            </li>\n                        )\n                    })}\n                </ul>\n            }\n        </div>\n    )\n}\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      overview: PropTypes.string,\n      title: PropTypes.string,\n      poster_path: PropTypes.string,\n    })\n  ),\n};","import { useEffect, useState } from 'react'\nimport { getTrendingMovies } from '../services/MovieDatabaseApi'\nimport { MoviesList } from '../components/MoviesList'\n\nconst Home = () => {\n\n    const [trendingMovies, setTrendingMovies] = useState([])\n\n    useEffect(() => {\n        getTrendingMovies().then(movies => {\n            setTrendingMovies([...movies])\n        })\n    }, [])\n\n    return (\n        <>\n            <h1 className=\"text-center text-4xl py-8 font-semibold\">Trending Today</h1>\n            <MoviesList movies={trendingMovies} />\n        </>\n    )\n}\n\nexport default Home","import axios from 'axios';\n\nconst BASE_URL = `https://api.themoviedb.org/3/`\nconst API_KEY = `api_key=b87c06507a636c850d5a0bd93afe2f26`\n\nexport function getTrendingMovies() {\n    try {\n        return axios.get(`${BASE_URL}trending/movie/day?${API_KEY}`)\n            .then(res => {\n                return res.data.results\n            })\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport function getMovieDetailsById(id) {\n    try {\n        return axios.get(`${BASE_URL}movie/${id}?${API_KEY}`)\n            .then(res => {\n                return res.data\n        })\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport function getMovieCastById(id) {\n    try {\n        return axios.get(`${BASE_URL}movie/${id}/credits?${API_KEY}`)\n            .then(res => {\n                return res.data.cast\n        })\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport function getMovieReviewsById(id) {\n    try {\n        return axios.get(`${BASE_URL}movie/${id}/reviews?${API_KEY}`)\n            .then(res => {\n                return res.data.results\n        })\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport function searchMoviesByName(q, page) {\n    try {\n        return axios.get(`${BASE_URL}search/movie?query=${q}&page=${page}&${API_KEY}`)\n            .then(res => {\n                if (res.data.results.length > 0) {\n                    return res.data.results\n                }\n                return alert('No results')\n        })\n    } catch (error) {\n        console.log(error);\n    }\n}"],"names":["MoviesList","movies","useState","moviesList","setMoviesList","location","useLocation","useEffect","className","length","map","id","title","poster_path","overview","state","to","loading","src","width","alt","trendingMovies","setTrendingMovies","getTrendingMovies","then","BASE_URL","API_KEY","axios","res","data","results","error","console","log","getMovieDetailsById","getMovieCastById","cast","getMovieReviewsById","searchMoviesByName","q","page","alert"],"sourceRoot":""}