{"version":3,"file":"static/js/357.66a242d2.chunk.js","mappings":"sMAgCA,UA5BgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAQA,OANAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAoBN,GAASO,MAAK,SAAAJ,GAChCC,GAAW,OAAID,GAChB,GACF,GAAE,CAACH,KAGF,gBAAKQ,UAAU,OAAf,SACGL,EAAQM,OAAS,GAChB,eAAID,UAAU,uBAAd,SACGL,EAAQO,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,2BACE,wBAAKD,KACL,cAAGJ,UAAU,qBAAb,SAAmCK,MAF5BF,EADE,OAQf,qEAIP,C,mKC5BKG,EAAQ,gCACRC,EAAO,2CAEN,SAASC,IACd,IACE,OAAOC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,8BAA2CC,IAAWR,MAAK,SAAAW,GAChE,OAAOA,EAAIC,KAAKC,OACjB,GAGF,CAFC,MAAOC,GACPC,QAAQC,IAAIF,EACb,CACF,CAEM,SAASG,EAAoBb,GAClC,IACE,OAAOM,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAA8BH,EAA9B,YAAoCI,IAAWR,MAAK,SAAAW,GACzD,OAAOA,EAAIC,IACZ,GAGF,CAFC,MAAOE,GACPC,QAAQC,IAAIF,EACb,CACF,CAEM,SAASI,EAAiBd,GAC/B,IACE,OAAOM,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAA8BH,EAA9B,oBAA4CI,IAAWR,MAAK,SAAAW,GACjE,OAAOA,EAAIC,KAAKO,IACjB,GAGF,CAFC,MAAOL,GACPC,QAAQC,IAAIF,EACb,CACF,CAEM,SAASf,EAAoBK,GAClC,IACE,OAAOM,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAA8BH,EAA9B,oBAA4CI,IAAWR,MAAK,SAAAW,GACjE,OAAOA,EAAIC,KAAKC,OACjB,GAGF,CAFC,MAAOC,GACPC,QAAQC,IAAIF,EACb,CACF,CAEM,SAASM,EAAmBC,EAAGC,GACpC,IACE,OAAOZ,EAAAA,EAAAA,IAAA,UAEAH,EAFA,8BAE8Bc,EAF9B,iBAEwCC,EAFxC,gCAEoEd,IAExER,MAAK,SAAAW,GACJ,OAAIA,EAAIC,KAAKC,QAAQX,OAAS,EACrBS,EAAIC,KAENW,MAAM,aACd,GAGJ,CAFC,MAAOT,GACPC,QAAQC,IAAIF,EACb,CACF,C","sources":["components/Reviews.js","services/MovieDatabaseApi.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviewsById } from '../services/MovieDatabaseApi';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    getMovieReviewsById(movieId).then(reviews => {\n      setReviews([...reviews]);\n    });\n  }, [movieId]);\n\n  return (\n    <div className=\"py-8\">\n      {reviews.length > 0 ? (\n        <ul className=\"flex gap-3 flex-wrap\">\n          {reviews.map(({ id, author, content }) => (\n            <li key={id}>\n              <h3>{author}</h3>\n              <p className=\"text-xs sm:text-sm\">{content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>We don't have any reviews for this movie</p>\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst BASE_URL = `https://api.themoviedb.org/3/`;\nconst API_KEY = `api_key=b87c06507a636c850d5a0bd93afe2f26`;\n\nexport function getTrendingMovies() {\n  try {\n    return axios.get(`${BASE_URL}trending/movie/day?${API_KEY}`).then(res => {\n      return res.data.results;\n    });\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport function getMovieDetailsById(id) {\n  try {\n    return axios.get(`${BASE_URL}movie/${id}?${API_KEY}`).then(res => {\n      return res.data;\n    });\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport function getMovieCastById(id) {\n  try {\n    return axios.get(`${BASE_URL}movie/${id}/credits?${API_KEY}`).then(res => {\n      return res.data.cast;\n    });\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport function getMovieReviewsById(id) {\n  try {\n    return axios.get(`${BASE_URL}movie/${id}/reviews?${API_KEY}`).then(res => {\n      return res.data.results;\n    });\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport function searchMoviesByName(q, page) {\n  try {\n    return axios\n      .get(\n        `${BASE_URL}search/movie?query=${q}&page=${page}&include_adult=false&${API_KEY}`\n      )\n      .then(res => {\n        if (res.data.results.length > 0) {\n          return res.data;\n        }\n        return alert('No results');\n      });\n  } catch (error) {\n    console.log(error);\n  }\n}\n"],"names":["movieId","useParams","useState","reviews","setReviews","useEffect","getMovieReviewsById","then","className","length","map","id","author","content","BASE_URL","API_KEY","getTrendingMovies","axios","res","data","results","error","console","log","getMovieDetailsById","getMovieCastById","cast","searchMoviesByName","q","page","alert"],"sourceRoot":""}