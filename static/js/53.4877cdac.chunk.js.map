{"version":3,"file":"static/js/53.4877cdac.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.js","components/SearchBar/SearchBar.js","pages/Movies.js","services/MovieDatabaseApi.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react'\nimport { Link, useLocation } from 'react-router-dom'\nimport './MoviesList.css'\n\nexport const MoviesList = ({ movies }) => {\n\n    const [moviesList, setMoviesList] = useState([])\n    const location = useLocation()\n\n    useEffect(() => {\n        setMoviesList([...movies])\n    }, [movies])\n\n    return (\n        <>\n            <hr className='movies__line' />\n            <div className='movies__container'>\n                {moviesList.length > 0 &&\n                    <ul className='movies__list'>\n                        {moviesList.map(({id, title, poster_path, overview}) => {\n                            return (\n                                <li className='movies__item' key={id}>\n                                    <Link state={location} to={`/movies/${id}`}>\n                                        {poster_path &&\n                                            <img \n                                                loading='lazy' \n                                                src={`https://image.tmdb.org/t/p/original${poster_path}`} \n                                                width='400' \n                                                alt={title} />\n                                        }\n                                        <div className='movies__item-overlay'>\n                                            <p className='movies__item-description'>{overview}</p>\n                                        </div>\n                                    </Link>\n                                </li>\n                            )\n                        })}\n                    </ul>\n                }\n            </div>\n        </>\n    )\n}\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      overview: PropTypes.string,\n      title: PropTypes.string,\n      poster_path: PropTypes.string,\n    })\n  ),\n};","import { useState, useEffect } from 'react'\nimport { useSearchParams } from 'react-router-dom'\nimport { searchMoviesByName } from '../../services/MovieDatabaseApi'\nimport { MoviesList } from 'components/MoviesList/MoviesList'\nimport './SearchBar.css'\n\nexport const SearchBar = () => {\n\n    const [searchMovies, setSearchMovies] = useState([])\n    const [searchQuery, setSearchQuery] = useState('')\n    const [searchParams, setSearchParams] = useSearchParams();\n    const query = searchParams.get('query')\n\n    const onChange = (e) => {\n        const { value } = e.target\n        setSearchQuery(value.trim().toLowerCase())\n    }\n\n    useEffect(() => {\n        if (!query) {\n          return\n        }\n        searchMoviesByName(query).then(movies => {\n            setSearchMovies(movies)\n        })\n    }, [query, searchParams])\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n        setSearchParams({ query: searchQuery })\n        setSearchQuery('')\n    }\n\n    return (\n        <div className='search-bar__container'>\n            \n            <form className='search-bar__form' onSubmit={onSubmit}>\n                <input type='text' value={searchQuery} className='search-bar__input' onChange={onChange} />\n                <button className='search-bar__btn'>Submit</button>\n            </form>\n            <MoviesList movies={searchMovies} />\n        </div>\n    )\n}\n\n// export default SearchBar","import { SearchBar } from \"../components/SearchBar/SearchBar\"\n\nconst Movies = () => {\n    return (\n        <>\n            <SearchBar />\n        </>\n    )\n}\n\nexport default Movies","import axios from 'axios';\n\nconst BASE_URL = `https://api.themoviedb.org/3/`\nconst API_KEY = `api_key=b87c06507a636c850d5a0bd93afe2f26`\n\nexport function getTrendingMovies() {\n    try {\n        return axios.get(`${BASE_URL}trending/movie/day?${API_KEY}`)\n            .then(res => {\n                return res.data\n            })\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport function getMovieDetailsById(id) {\n    try {\n        return axios.get(`${BASE_URL}movie/${id}?${API_KEY}`)\n            .then(res => {\n                return res.data\n        })\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport function getMovieCastById(id) {\n    try {\n        return axios.get(`${BASE_URL}movie/${id}/credits?${API_KEY}`)\n            .then(res => {\n                return res.data.cast\n        })\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport function getMovieReviewsById(id) {\n    try {\n        return axios.get(`${BASE_URL}movie/${id}/reviews?${API_KEY}`)\n            .then(res => {\n                return res.data.results\n        })\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport function searchMoviesByName(q) {\n    try {\n        return axios.get(`${BASE_URL}search/movie?query=${q}&page=1&${API_KEY}`)\n            .then(res => {\n                if (res.data.results.length > 0) {\n                    return res.data.results\n                }\n                return alert('No results')\n        })\n    } catch (error) {\n        console.log(error);\n    }\n}"],"names":["MoviesList","movies","useState","moviesList","setMoviesList","location","useLocation","useEffect","className","length","map","id","title","poster_path","overview","state","to","loading","src","width","alt","SearchBar","searchMovies","setSearchMovies","searchQuery","setSearchQuery","useSearchParams","searchParams","setSearchParams","query","get","searchMoviesByName","then","onSubmit","e","preventDefault","type","value","onChange","target","trim","toLowerCase","BASE_URL","API_KEY","getTrendingMovies","axios","res","data","error","console","log","getMovieDetailsById","getMovieCastById","cast","getMovieReviewsById","results","q","alert"],"sourceRoot":""}